	SUBROUTINE FLUXDIV
	INCLUDE 'SOLDIV.FI'
C		COMPUTES PARTICLE FLUX INTO DIVERTOR
	AP = 39.44*RMAJOR*AMINOR*SQRT((1.+ELONG**2)/2.)
	VP = 19.72*RMAJOR*(AMINOR**2)*ELONG
	FUSION = PFUSION/(17.6*1.6E-19)
C		PARTICLE FLUX CONSISTENT WITH SOURCE TO PLASMA CORE
	FLUXNEUTIN=CURSEP*(1.-ALPHASEP)
 	FLUXIONIN =	YIONSOL*FIN*2.*6.28*RMAJOR/AP
	FLUXSEPIN = FLUXNEUTIN + FLUXIONIN
	IF(FLUXSEPIN.EQ.0.) FLUXSEPIN = FLUXPART
	FLUXPART = (FLUXSEPIN*AP + SPELLET -2.*FUSION)/AP  
	PINSEP = 1.5*XK*TSOL*(FLUXNEUTIN + 2.*FLUXIONIN)*AP	 
	IF(ITERN.EQ.1) GOTO 75

	FLUXPART = (FLUXSEPIN*AP + SPELLET -2.*FUSION)/AP  
 			  
C		CALCULATE CONFINEMENT FROM ITER 89-P
75 	PHEAT = (PFUSION/5. + PBEAM) + (POHMH+PINSEP-PBREM)*1.E-6 
	IF(PHEAT.EQ.0.0) PHEAT = 5.E5 
	TAUE = HCONF*0.048*(PLASMACUR**0.85)*(RMAJOR**1.2)*(B**0.2)*
     2       ((XNAV/1.E20)**0.1)*SQRT(AMASS*ELONG/PHEAT)	 
      TAUP = TAURATIO*TAUE

	IF(ITINIT.NE.0) GOTO 50 
C		TEMPORARY INITIALIZATION
	FUELPL = FUELPLIN + FUELPLOUT 
	IF(FLUXPART.LE.0.0) 
     2	FLUXPART = (0.5*(FUELMP+FUELPF+FUELPL)+SPELLET-2.*FUSION)/AP 

C		  NEW NAV & NCTR/NPED FOR INPUT ALPHAN
50	XNAV = FLUXPART*TAUP*AP/VP 
	XNCTRPED = (XNAV/XNPED)*(1.+ALPHAN) - 1.
	XN0 = XNCTRPED*XNPED
	RETURN
	END

	
