	SUBROUTINE LH
	INCLUDE 'SOLDIV.FI'
	dimension omegavt(3)
	DOUBLE PRECISION TDBL, XLZDBL, DLZDBL

C		CALCULATES GROWTH RATE FOR COUPLED DENSITY-TEMPERATURE PERTURBATIONS
	DO 1000 J = 1,3
C		RADIAL WAVE VECTOR
	IF(J.EQ.1) XKR = 1.0E2
	IF(J.EQ.2) XKR = 5.0E2
	IF(J.EQ.3) XKR = 10.0E2
	IF(J.EQ.4) XKR = 3.1416/DELTB 
 
C		MISCELLANEOUS VARIABLES
	HEATB = 0.
	DHEATDN=0.
	DHEATDT=0. 
	VRAD = 2.E4
	XLVP=0.
	XLVR=0.
	VP=0.
	XKPERP = 0.
	XKP = 0.
	XMP = 0.
	XLVPERP = 0.
C		ATOMIC DATA FOR X-POINT TRANSPORT BARRIER
	XNM = XNBAR
	XN = XNM
 	TM= TBAR
	T = TM
	XNZ = (CFZINT+CFZINJ)*XN
	XNOM = XNOBAR
	XNOMXPT = XNOBARXPT
	XNOCOLDM = XNOCOLDBAR
	XNOCOLDMXPT = XNOCOLDBARXPT
	SVELM = SVELBAR
	SVCXM = SVCXBAR
	SVIONM = SVIONBAR
	EIONM = EIONBAR
	SIGVION = SVIONM
	SIGVCX = SVCXM
	SIGVEL = SVELM
	CS = CSBAR
	RHOT = RHOBAR
C			COLDRAT = COLD/TOTAL NEUTRAL DENSITY RATIO
	COLDRAT = XNOCOLDMXPT/(XNOCOLDMXPT+XNOMXPT)
	BMAG = B
 	x = eionM
	XNUAT = (SVELM + SVCXM)*XNOMXPT
	DNUATDT = 0.0
	XNUION = SVIONM*XNOMXPT
	DIONDT = 0.0 

C		RADIATION IN TRANSPORT BARRIER
	IF((CFZINT+CFZINJ).GT.0.0) GOTO 50
	CFZINT = 1.E-4
	CFZINJ = 1.E-4
50	CONTINUE		
      TDBL = TM
	IZ1 = IZINJECT
	IZ2 = IZINTRIN
	CALL cefits (IZ1, TDBL, XLZDBL, 1, DLZDBL)
	XLZ1 = XLZDBL
	XLZ = XLZDBL*CFZINJ
	DLZZDT = DLZDBL*CFZINJ
	CALL CEFITS (IZ2, TDBL, XLZDBL, 1, DLZDBL)
	XLZ2 = XLZDBL
	XLZ = XLZ + XLZDBL*CFZINT
	DLZZDT = DLZZDT + DLZDBL*CFZINT

C		CONVERT FROM ERG-CM3/EV-S TO CM3/S
	XLZ = XLZ/1.6E-12
	DLZZDT = DLZZDT/1.6E-12 
	XLZ1 = XLZ1/1.6E-12
	XLZ2 = XLZ2/1.6E-12

C		RADIAL GRADIENTS IN TRANSPORT BARRIER--FROM EXPERIMENT
	XLT = GRADTBAR(4)
	XLN = GRADNBAR(4)
	XLTE = GRADTEBAR(4)
	XLTI = XLT

C		RADIAL CHI & D IN TRANSPORT BARRIER--CONSISTENT WITH HEAT REMOVAL & EXP GRADT	 
	CHIR = FLUXHEAT*FCOND/(XNM*XK*TM*GRADTBAR(4))
	DR = CHIR

C		GROWTH RATE OF COUPLED N-T RADIAL INSTABILITIES
	GNTR = XNU*XLN*XLT*DR + XNUION*(XNU-DIONDT) - XNU*VP*XLN
	GNTI = XKR*XNU*DR*XLN
	GNNR = DR*(XKR**2) - XNUION
	GNNI = XKR*(XNU*DR*XLT - VP)
	GTTR = CHIR*((XKR**2)+XNU*(XLT**2)) + (XNU*HEATB/T - DHEATDT)/XN
     2	   - XNZ*(XNU*XLZ/T -DLZZDT) - 1.5*XNUAT*(XNU - 1. - DNUATDT)-
     3	   XNUION*(EIONM/T)*(XNU - DIONDT)
	GTTI = XKR*CHIR*(2.*XNU*XLT + XLN)
	GTNR = CHIR*XLT*XLN + (HEATB/XN - DHEATDN)/T + XNZ*XLZ/T
	GTNI = XKR*CHIR*XLT	
C		CONSTRUCT COMPOSITE TERMS
	X = 3.*GNTI - 3.*GNNI - GTTI
	Y = 3.*GNTR - 3.*GNNR - GTTR
	DENOM = X**2 + Y**2
	Z = GTTR*GNNI + GTTI*GNNR - GTNR*GNTI - GNTR*GTNI
	W = GNTI*GTNI + GTTR*GNNR - GNTR*GTNR - GTTI*GNNI
	XNUM = X*Z + Y*W
C		GROWTH RATE COUPLED N-T PERTURBATIONS ** EQ 14
	OMEGANT(J) = XNUM/DENOM			 
C		GROWTH RATE T PERTURBATIONS ** EQ 7
	OMEGAT(J) =-1.*GTTR/3.

C		CALCULATES GROWTH RATE FOR ION-ELECTRON TEMPERATURE PERTURBATIONS
	TIZ = T
	TEZ = T
	
	XNUE = XNU
	XNUI = XNU
	DHEATEDT =0.
	DHEATIDT =0.
	HEATI = 0.
	HEATE = 0.
	CHIPERPI = 0.5*CHIR
	CHIPERPE = 0.5*CHIR
	CHIRI = 0.5*CHIR
	CHIRE = 0.5*CHIR

	ALPHAE =  CHIPERPE*((XKR**2)+XNUE*(XLTE**2)) + 
     2	   (XNUE*HEATE/TEZ - DHEATEDT)/XN - XNZ*(XNUE*XLZ/TEZ -DLZZDT) -
     3	   XNUION*(EIONM/TEZ)*(XNUE - DIONDT)
	ALPHAI = CHIPERPI*((XKR**2)+XNUI*(XLTI**2)) + 
     2	    (XNUI*HEATI/TIZ - DHEATIDT)/XN- 1.5*XNUAT*(XNUI-1.-DNUATDT)
C		DECOUPLED TI-TE PERTURBATIONS ** EQS 24 & 25
	OMEGATE(J) = -2.*ALPHAE/3.
	OMEGATI(J) = -2.*ALPHAI/3.      
C		COUPLED TI-TE PERTURBATIONS
	XLAM = 25.3 - 1.15*LOG10(XN) + 2.3*LOG10(TEZ) 
	CEI = 2.34E-9*XLAM 
	YY = 1.5*(TIZ/TEZ)-0.5 
	ZLII = CEI*XN/(TEZ**1.5)
	ZLIE = CEI*XN*YY/(TIZ*(TEZ**0.5))
	ZLEE = CEI*XN*YY/(TEZ**1.5)
	ZLEI = CEI*XN*TIZ/(TEZ**2.5)
	RI = XKR*CHIPERPI*(XLN + 2.*XNUI*XLTI)
	RE = XKR*CHIPERPE*(XLN + 2.*XNUE*XLTE)
	ZKI = ALPHAI + ZLII
	ZKE = ALPHAE + ZLEE
	X = ZKI + ZKE
	Y = RI + RE
	ZNUM = X*(ZKI*ZKE - RI*RE - ZLEI*ZLIE) + Y*(RI*ZKE + RE*ZKI)
	OMEGATT(J) = -2.*ZNUM/(3.*(X**2 + Y**2))
C		COUPLED Vr-Vperp-T PERTURBATIONS
	XM = 3.343E-27
	Q = 1.6E-19
	VPERP = 1E2*T*XLT/BMAG
C	DELN = (VPERP/CS)*(XNUAT/CS)
	ARRR = XNUAT
	ARPR = -1.*CS/RHOT
	ARTR = (-2.*XLT + XM*VRAD*XNUAT*DNUATDT/T)*CS
	ARTI = XKR*2.*CS
	 
	APRR = CS/RHOT
	APPR = XNUAT
	APTR = (-2.*DELN + XM*VPERP*XNUAT*DNUATDT/T)*CS
	APTI = XKPERP*2.*CS
		
	ATTR = CHIR*((XKR**2)+XNU*(XLT**2)) + CHIR*(XKPERP**2) +
	2        3.*XNU*VRAD*XLT + (XNU*HEATB/T - DHEATDT)/XN
     3	   - XNZ*(XNU*XLZ/T -DLZZDT) - 1.5*XNUAT*(XNU - 1. - DNUATDT) -
     4	   	XNUION*(EIONM/T)*(XNU - DIONDT)
	ATTI = XKR*(CHIR*(2.*XNU*XLT + XLN) + 3.*VRAD) + 3.*XKPERP*VPERP
	ATRR = -3.*(XLN + XLT)*CS
	ATRI = 3.*XKR*CS
	ATPR = -3.*DELN*CS
	ATPI = 3.*XKPERP*CS
	
	AR = APPR*ATTR-ATRR*ARTR+ATRI*ARTI-3.*APRR*ARPR-ATPR*APTR
     2	 +ATPI*APTI+3.*ARRR*APPR+ARRR*ATTR  
	BR = ATPI*APTR+ATPR*APTI-ARRR*ATTI-APPR*ATTI+ATRR*ARTI+ATRI*ARTR
	SR =ARRR*APPR*ATTR+ARPR*APTR*ATRR+ARTR*APRR*ATRR-ARTI*APRR*ATPI-
	2	ATRR*APPR*ARTR+ATRI*APPR*ARTI-APRR*ARPR*ATTR-ARRR*ATPR*APTR+
	3	ARRR*ATPI*APTI-ARPR*APTI*ATRI
	AI = APPR*ATTI+ARRR*ATTI-ATRR*ARTI-ATRI*ARTR-ATPR*APTI-ATPI*APTR
	BI = 3.*ARRR*APPR+APPR*ATTR-ATRR*ARTR-3.*APRR*ARPR-ATPR*APTR+
	2	 ATRI*ARTI+ATPI*APTI
	SI = ARRR*APPR*ATTI+ARPR*APTR*ATRI+ARPR*APTI*ATRR+ARTR*APRR*ATPI+
     2	 ARTI*APRR*ATPR-ATRR*APPR*ARTI-ATRI*APPR*ARTR-APRR*ARPR*ATTI-
     3	 ARRR*ATPR*APTI-ARRR*ATPI*APTR		
      OMEGAVVT(J) = (SR*BI - SI*BR)/(AI*BR - AR*BI)	    
	XNUM = ATTI*(ARRR*ATTI-ATRI*ARTR-ATRR*ARTI) +
     2       (3.*ARRR+ATTR)*(ARRR*ATTR-ATRR*ARTR+ATRI*ARTI)
      DENOM = (3.*ARRR+ATTR)**2 + ATTI**2		
      OMEGAVT(J) = -1.*XNUM/DENOM
C		FINAL FORM OF T-VPERPI-VPERPE
	OMI = Q*BMAG/XM 
	DELP = -0.5*XNUAT*((XLT+XLN)/OMI + 1.E2*ERAD/(BMAG*((CS*1E2)**2))) 
	VPERPI = 1E2*(-1.*ERAD - T*(XLN + XLT)*1E2)/(BMAG)
	VPERPE = 1E2*(-1.*ERAD + T*(XLN + XLT)*1E2)/(BMAG)
	ATTRP = 1.5*DELP*(VPERPE+VPERPI)*(XNU-1.)-3.*XNUION*(XNU-1.)
	OMEGAVVT(J) = -1.*(ATTR + ATTRP)/3.   
C		COUPLED N-Vr-T RADIAL PERTURBATIONS
C		CONVERSION TO CGS
	BMAG = 1.E4*BMAG
	ERAD = 1.E-4*ERAD/3.
C		ION-ION COLLISION TIME
	TII = (3.E6/(XLAM/10.))*(T**1.5)/XN 
	TEI = (3.4E5/(XLAM/10.))*(T**1.5)/XN 
C		CONSTRAINTS
	XLVR = -1.*(XLT + XNOM*SIGVION/VRAD) 
	VR2 = XLN + XLT -5.*TII*VRAD*XLT*XLN/6. +(XLN + XLT)
	TR2 = CHIR*XLT*(XNU*XLT + XLN) - XNZ*XLZ/T 
     2     + VRAD*((XMP**2)*XLVP + (4.*XLT - XLN)*VRAD + 
     3      TII*(XLN**2)*VRAD/3. - (XLT + XLN)) 
     4	  - 1.5*XNUAT - (EIONM/T)*XNUION			  

C		COEFFICIENTS
	ANNR = -1.*XLVR*VRAD/CS	- XNUION/CS
	ANNI = XKR*VRAD/CS
	AVNR = -1.*XLN
	AVVR = -1.*XLN*VRAD/CS + TII*CS*(XKR**2)/3. + XNUAT/CS
	AVVI = XKR*(VRAD/CS + 5.*TII*CS*XLT/6.)
	ANVR = -1.*(2.*XLT + XLN) + XNUAT*VRAD/(CS**2)
	ATVR = -1.*(XLN + TII*VRAD*(15.*XLT*XLVR/4.)/3.) + 5.*VR2/2.
	ATVI = XKR*(1. + 5.*TII*VRAD*XLVR/6.)
	ANTR = (TR2 - CHIR*XNU*(XLT**2) + 2.*XNZ*XLZ/T - VRAD*(5.*XLT +
     2       2.*XLVR))/CS 	+ (1.5*XNUAT + (EIONM/T)*XNUION)/CS -
	3       0.5*(XMP**2)*(VRAD/CS)*(2.*XLVP + XLVR)
      ANTI = XKR*(CHIR*XLT + 2.*VRAD)/CS +
	2       0.5*(XMP**2)*(VRAD/CS)*XKR
	AVTI = XKR*(2. + TII*VRAD*(2.5*XLT + 2.*XLVR)/3.) +
	2       0.5*(XMP**2)
	AVTR = -1.*(5.*XLT + 2.*XLN) +VR2 + TII*VRAD*((XKR**2) -
	2       2.5*XLT*XLVR)/3. - 0.5*(XMP**2)*(2.*XLVP+XLN)
      ATTR = XNU*TR2/CS + CHIR*((XKR**2) - XNU*(XLT*XLN +(XNU-1.)*
     2       (XLT**2)))/CS + XNZ*DLZZDT/CS + 
     3       2.5*VRAD*VR2/CS - 5*TII*(VRAD**2)*XLVR*(1.5*XLT - XLVR)/
     4       (6.*CS)  + (1.5*XNUAT*(1. + DNUATDT) + 
     5	      XNUION*(EIONM/T)*(DIONDT))/CS
      ATTI = XKR*(CHIR*(2.*XNU*XLT + XLN) + 5.*VRAD + 
	2       5.*TII*(VRAD**2)*XLVR/6.)/CS

C		COMPOSITE TERMS
	AR = AVVR*ATTR - AVVI*ATTI + ANNR*ATTR - ANNI*ATTI + 3.*ANNR*AVVR
     2     - 3.*ANNI*AVVI - AVTR*ATVR + AVTI*ATVI - 3.*ANVR*AVNR + 
     3     3.*(XKR**2)
	AR = AR - (XNUION/CS)*ATTR 
      AI = AVVR*ATTI + AVVI*ATTR + ANNR*ATTI + ANNI*ATTR + 3.*ANNR*AVVI
     2     + 3.*ANNI*AVVR - AVTR*ATVI - AVTI*ATVR - 3.*XKR*(ANVR + AVNR)
	AI = AI - (XNUION/CS)*ATTI 
      BR = ANNR*(AVVR*ATTR - AVVI*ATTI) - ANNI*(AVVR*ATTI + AVVI*ATTR) +
	2	 AVNR*(ATVR*ANTR - ATVI*ANTI) - XKR*(ATVR*ANTI + ATVI*ANTR) -
     2     ANNR*(AVTR*ATVR - AVTI*ATVI) + ANNI*(AVTR*ATVI + AVTI*ATVR) -
     3     ANVR*(AVNR*ATTR - XKR*ATTI)  + XKR*(AVNR*ATTI + XKR*ATTR)
	BR = BR - (XNUION/CS)*(AVTR*ATVR -2.*(XKR**2)) 
      BI = ANNR*(AVVR*ATTI + AVVI*ATTR) + ANNI*(AVVR*ATTR - AVVI*ATTI) -
     2     ANNR*(AVTR*ATVI + AVTI*ATVR) - ANNI*(AVTR*ATVR - AVTI*ATVI) -
     3     XKR*(AVNR*ATTR - XKR*ATTI)   - ANVR*(AVNR*ATTI + XKR*ATTR) +
	4     XKR*(ATVR*ANTR - ATVI*ANTI)  + AVNR*(ATVR*ANTI + ATVI*ANTR)
      BI = BI - (XNUION/CS)*XKR*(2.*ATVR + AVTR) 
C		GROWTH RATE FOR COUPLED N-Vr-T MODES
	OMEGANVT(J) = -1.*CS*(AI*BI + AR*BR)/((AI**2) + (AR**2)) 
C		SIMPLE FORMS OF GROWTH RATE WITH XLN = VRAD = TII = 0.
	OMREQ25(J) = (-1.*CHIR*(XKR**2+XNU*(XLT**2)) + XNZ*(XNU*XLZ/T -
     2          DLZZDT))/3. + (1.5*XNUAT*(XNU - 1. - DNUATDT) + 
     3	      XNUION*(EIONM/T)*(XNU - DIONDT))/3.

	A1 = XKR**2 -3.*XNU*(XLT**2) - XLN**2 -(2.*(XNU+1.))*XLN*XLT
	A2 = (XKR**2)*((2.*XNU+1.)*XLT + 2.*XLN) + XNU*(XLT**2)*(XLN +
     2     2.*XLT) - XLT*(XLN**2)
      GAM = XKR/(XLN + (11./5.)*XLT)
	B1 = GAM/(5.*XKR*(1. + (GAM**2)))

	OMREQ24(J) = B1*(-1.*CHIR*(GAM*XKR*A1 + A2) +		
     2		  (XNZ*(XNU*XLZ/T - DLZZDT)
     3	      + 1.5*XNUAT*(XNU - 1. - DNUATDT) + 
     4	      XNUION*(EIONM/T)*(XNU - DIONDT))*(2.*XLT+XLN+GAM*XKR))	      	 	 	     	 	        		  		 
	OMREQ18(J) = OMREQ25(J) +(-1.*(XKP**2)*CHIPL + VRAD*(-1.*XNU*
	2	      (XMP**2) *XLVP - TII*VRAD*XLVR*(2.5*XLT - 1.5*XLVR) - 
	3          (5. + 3.*XNU)*XLT - (5.-2.*XNU)*XLN ))/3.


C		2D 2-SPECIES N-Vr-T PERTURBATIONS
	CHIPERPI = 0.5*CHIR
 	CHIPERPE = 0.5*CHIR
	CHIRI = 0.5*CHIR
	CHIRE = 0.5*CHIR
 
	VPERPI = 1E2*(-1.*ERAD - T*(XLN + XLT)*1E2)/(BMAG)
 	VPERPE = 1E2*(-1.*ERAD + T*(XLN + XLT)*1E2)/(BMAG)
	DELNP= -0.5*XNUAT*((XLT+XLN)/OMI + 1.E2*ERAD/(BMAG*((CS*1E2)**2))) 
	DELTP = 0.
	TIZ = T
 	TEZ = T

C		STRONG TEMPERATURE EQUILIBRATION **EQ 49

	OMRESTRONG(J) = -1.*(CHIR*((XKR**2) + XNU*(XLT**2)) +
	2             CHIR*((XKPERP**2) + XNU*(DELTP**2)) +
	3             5.*VRAD*XNU*XLT - 
	4             XNZ*(XNU*(XLZ/T) - DLZZDT) -
	5             5.*XNUION*(XNU-1) - XNUION*XNU*EIONM/T -
	6             1.5*XNUAT*(XNU -1.) +
	7             5.*XNU*DELTP*(VPERPI + VPERPE)/2.)/3.

C		WEAK TEMPERATURE EQUILIBRATION ** EQS 50 & 51

	OMREWEAKI(J)= -1.*(2.*CHIRI*((XKR**2) + XNU*(XLTI**2)) + 
	2           2.*CHIPERPI*((XKPERP**2) + XNU*(DELTP**2)) +
     2           5.*VRAD*XNU*XLTI -
     3           5.*XNUION*(XNU - 1.) -
     4           3.*XNUAT*(XNU - 1.) + 5.*XNU*DELTP*VPERPI
     5           + 5.*RHOT*CS*(DELTP*XLN - XLTI*DELNP))/3.

	OMREWEAKE(J)= -1.*(2.*CHIRE*((XKR**2) + XNU*(XLTE**2)) +
     2	       2.*CHIPERPE*((XKPERP**2) + XNU*(DELTP**2)) + 
     2           5.*VRAD*XNU*XLTE -
     3           5.*XNUION*(XNU-1.) -    
     4           2.*XNUION*EIONM*XNU/TEZ + 5.*XNU*DELTP*VPERPE -
	5	       2.*XNZ*(XNU*XLZ/TEZ - DLZZDT) +
     6           5.*RHOT*CS*(DELNP*XLTE-DELTP*XLN))/3. 
C		RESET FIELDS TO MKS
	BMAG = 1E-4*BMAG
	ERAD = 3E4*ERAD        	 
C		PARALLEL INSTABILITIES
	GOTO 1000	
C		COEFFICIENTS
	BETA = BETAG 
 	XMPERP = VPERPI/CS 
	CHIPL = 3.5E19*(T**2.5)/((zeff**3)*XLAM*XN) 
C	CHIPL = 1.9E21*(T**2.5)/(ZEFF*XLAM*XN)
	RHOT = RHOT*BETA 
	IZIMP = IZINJECT
	C2E = 1.5*(1. - 0.6934/((1.3167)**ZEFF))
	X  = 1./(Z0 + SQRT(0.5*(1. + 1./IZIMP)))
      C2I= 1.56*(1.+1.414*Z0)*(1.+0.52*Z0)*X/((1.+2.65*Z0)*(1.+.285*Z0)) 
	C2 = C2E - ALPHA*C2I
	ANNR = -XNUION/CS
      ANNI = XKP*(XMP + BETA*XMPERP) 
	ANVI = XKP*(1.- RHOT*XLVP*XMP)
	AVVR = 4.*(XKP**2)*TII*CS/3. -XNUAT/CS
	AVVI = XKP*(XMP + BETA*XMPERP + RHOT*(XLN + XLT))
	ATVI = XKP*(1 - C2 - RHOT*XLVP*XMP)
	ANTR = (TR2 - CHIR*XNU*(XLT**2) + 2.*XNZ*XLZ/T)/CS 	+ 
	2       (1.5*XNUAT + (EIONM/T)*XNUION)/CS 
	ANTI = XKR*CHIR*XLT/CS +	XKP*(XMP + 
	2       2.*BETA*XMPERP + RHOT*XLVP*(XMP**2))
	AVTR = -2.*TII*(XKP**2)*CS*BETA*XMPERP/3. - XNUAT/CS
	AVTI = XKP*(2.- RHOT*(XLN+XLT)*XMP + (XMP**2))               
	ATTR = XNU*TR2/CS + CHIR*((XKR**2) - XNU*(XLT*XLN +(XNU-1.)*
     2       (XLT**2)))/CS + XNZ*DLZZDT/CS +	CHIPL*(XKP**2)/CS  +
     3       (1.5*XNUAT*(1. + DNUATDT) + XNUION*(EIONM/T)*(DIONDT))/CS
	ATTI = XKP*((C2+4.)*XMP + 5.*BETA*XMPERP + RHOT*XLVP*(XMP**2)) +
     3	   XKR*CHIR*(2.*XNU*XLT + XLN)/CS 		 
C		COMPOSITE TERMS
	AR = AVVR*ATTR - AVVI*ATTI -ANNI*ATTI-3.*ANNI*AVVI +AVTI*ATVI +
	2	 3.*XKP*ANVI
	AR = AR +ANNR*(3.*AVVR + ATTR) 
	AI = AVVI*ATTR + AVVR*ATTI + ANNI*ATTR + 3.*ANNI*AVVR- AVTR*ATVI
	AI = AI + ANNR*(3.*AVVI + ATTI)
	BR = -1.*ANNI*(AVVR*ATTI+AVVI*ATTR)+ ANNI*AVTR*ATVI +XKP*ANVI*ATTR  
	2     -XKP*ATVI*ANTR
	BR = BR + ANNR*ATVI*AVTI  
      BI = ANNI*(AVVR*ATTR-AVVI*ATTI) + ANNI*AVTI*ATVI +XKP*ANVI*ATTI -
	2	 XKP*ATVI*ANTI
	BI = BI - ANNR*ATVI*AVTR 
	OMREPAL = -1.*CS*(AR*BR + AI*BI)/(AR*AR + AI*AI)
C		SEMI-ANALYTICAL FORMULATIONS
	GAM = 1. - TII*CS*BETA*XMPERP*XLVPERP/3. - RHOT*(XLN+XLT)*XMP
	THETA = RHOT*(XLN+XLT) + XMP + BETA*XMPERP
	VCOMP = XMP + BETA*XMPERP
	C = 1. - C2 - RHOT*XLVP*XMP
	A = 1. - RHOT*XLVP*XMP - VCOMP*THETA
	A1 = 3.*A + 2.*C*GAM + 4.*TII*CS*ATTR/3. -(THETA + VCOMP)*ATTI/XKP
	A2 = 4.*TII*CS*ATTI/3. + (THETA + VCOMP)*ATTR/XKP 
	2     - C*AVTR/XKP - 4.*XKP*TII*CS*VCOMP
	BR = C*(ANTR - VCOMP*AVTR) - A*ATTR
	BI = C*ANTI - A*ATTI + 4.*XKP*TII*VCOMP*ATTR/3.
	OMREQYY(J) = CS*(A2*BI + A1*BR)/(A1*A1 + A2*A2) 
	A1 = 3.*(ANVI - ANNI*AVVI/XKP) + (AVVR*ATTR -ATTI*(AVVI+ANNI))/XKP
	2     + ATVI*AVTI/XKP
	A2 = 3.*ANNI*AVVR/XKP + (ATTR*(AVVI+ANNI)+ATTI*AVVR)/XKP -
     2     ATVI*AVTR/XKP
      BR = ATVI*(ANTR-ANNI*AVTR/XKP) - ATTR*(ANVI-ANNI*AVVI/XKP)+ 
	2     ATTI*ANNI*AVVR/XKP
      BI = ATVI*(ANTI-ANNI*AVTI/XKP) - ATTI*(ANVI-ANNI*AVVI/XKP) -
     2     ATTR*ANNI*AVVR/XKP	 
  	OMREQYZ(J)= CS*(A2*BI + A1*BR)/(A1*A1 + A2*A2) 
C		SIMPLIFY WITH VPARALLEL=VPERP=0
	ATTI = XKR*CHIR*(2.*XNU*XLT + XLN)/CS 
	ANTI = XKR*CHIR*XLT/CS 
	A1 = 3. + 2.*(1.-C2) + 4.*TII*CS*ATTR/3.- RHOT*(XLN + XLT)*ATTI/XKP
	A2 = 4.*TII*CS*ATTI/3. + RHOT*(XLN + XLT)*ATTR/XKP
	BR = ANTR*(1. - C2) - ATTR
	BI = XKR*CHIR*XLT*(1.- C2)/CS - ATTI
	OMREQXX(J) = CS*(A2*BI + A1*BR)/(A1*A1 + A2*A2) 
1000	CONTINUE 

	RETURN
	END		

